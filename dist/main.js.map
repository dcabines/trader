{"version":3,"sources":["webpack://traders/./node_modules/node-fetch/browser.js","webpack://traders/./src/actions.js","webpack://traders/./src/api.js","webpack://traders/./src/archive.js","webpack://traders/./src/http.js","webpack://traders/./src/report.js","webpack://traders/./src/roles.js","webpack://traders/./src/settings.js","webpack://traders/./src/state.js","webpack://traders/./src/util.js","webpack://traders/webpack/bootstrap","webpack://traders/webpack/runtime/define property getters","webpack://traders/webpack/runtime/hasOwnProperty shorthand","webpack://traders/webpack/runtime/make namespace object","webpack://traders/./src/index.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import { timeout, userName } from './util.js';\r\nimport { getUser, getSystems, getMarket, createFlightPlan } from './api.js';\r\nimport { state, ship, cargo, marketItem } from './state.js';\r\nimport { beginTrip, endTrip } from \"./archive.js\";\r\nimport { availableReport, flightReport, buyReport, creditReport, sellReport } from './report.js';\r\n\r\nexport function getAccount() { return getUser(state.user.username, state.token).then(timeout(1)); }\r\n\r\nexport async function getMarkets() {\r\n  for (const ship of state.user.ships) {\r\n    await getMarket(ship.location, state.token);\r\n  }\r\n}\r\n\r\nexport async function fly(shipId, destination) {\r\n  const myShip = ship(shipId);\r\n  if (myShip.location === destination) return;\r\n\r\n  await createFlightPlan(shipId, destination, state.token);\r\n  await getAccount();\r\n  console.log(flightReport());\r\n\r\n  await timeout(state.flightPlan.timeRemainingInSeconds);\r\n  await timeout(5); // docking\r\n  await getMarket(destination, state.token);\r\n  console.log(report(planetReport(state.planet)));\r\n}\r\n\r\nexport async function buy(shipId, good, quantity) {\r\n  const item = marketItem(good);\r\n\r\n  if (!item) {\r\n    console.log(availableReport(good));\r\n    return;\r\n  }\r\n\r\n  const canAfford = state.user.credits / item.pricePerUnit;\r\n  const toBuy = Math.min(canAfford, item.quantityAvailable, quantity);\r\n\r\n  if (isNaN(toBuy)) debugger;\r\n  if (toBuy <= 0) return;\r\n  await buyGood(shipId, good, toBuy, state.token);\r\n  await getAccount();\r\n\r\n  console.log(report([buyReport(state.order[0]), creditReport()]));\r\n}\r\n\r\nexport async function sell(shipId, good, quantity) {\r\n  if (quantity <= 0) return;\r\n  await sellGood(shipId, good, quantity, state.token);\r\n  await getAccount();\r\n\r\n  console.log(report([sellReport(state.order[0]), creditReport()]));\r\n}\r\n\r\nexport async function refuel(shipId, wantedFuel) {\r\n  const cargoFuel = cargo(shipId, 'FUEL') || { quantity: 0 };\r\n  const neededFuel = wantedFuel - cargoFuel.quantity;\r\n\r\n  if (isNaN(neededFuel)) debugger;\r\n  if (neededFuel <= 0) return;\r\n  await buy(shipId, 'FUEL', neededFuel, state.token);\r\n}\r\n\r\nexport async function logIn(options) {\r\n  if (options) {\r\n    state.token = options.token;\r\n    state.user = { username: options.username };\r\n  } else {\r\n    await createToken(userName());\r\n  }\r\n\r\n  await getAccount();\r\n  await getSystems(state.token);\r\n  console.log('Username', state.user.username);\r\n}\r\n\r\nexport async function startup() {\r\n  await takeLoan('STARTUP', state.token);\r\n  await buyShip('OE-NY', 'JW-MK-I', state.token);\r\n  await getMarket('OE-NY', state.token);\r\n  await refuel(state.user.ships[0].id, 30);\r\n  console.log(report(planetReport(state.planet)));\r\n}\r\n\r\nexport async function trade(options) {\r\n  while (true) {\r\n    const location = ship(options.shipId).location;\r\n\r\n    if (!location) {\r\n      await getAccount();\r\n      continue;\r\n    }\r\n\r\n    beginTrip();\r\n    const inCargo = cargo(options.shipId, options.good);\r\n\r\n    if (!inCargo) {\r\n      await fly(options.shipId, options.source);\r\n      await refuel(options.shipId, options.fuel);\r\n      const toBuy = fillHold(options.shipId, options.good, options.creditReserve);\r\n      await buy(options.shipId, options.good, toBuy);\r\n    }\r\n\r\n    await fly(options.shipId, options.destination);\r\n    const toSell = goodQuantity(options.shipId, options.good);\r\n    await sell(options.shipId, options.good, toSell);\r\n    await refuel(options.shipId, options.fuel);\r\n\r\n    endTrip();\r\n\r\n    const reports = [\r\n      tripReport(),\r\n      profitReport(),\r\n      totalProfitReport()\r\n    ];\r\n\r\n    console.log(report(reports));\r\n\r\n    if (state.user.credits < 1000) {\r\n      console.log('You\\'re broke! Go home.');\r\n      await timeout(4);\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function explore(options) {\r\n  const symbols = unexploredLocations().map(x => x.symbol);\r\n\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    await refuel(options.shipId, 100);\r\n    await fly(options.shipId, symbols[i]);\r\n  }\r\n\r\n  console.log(report(systemReport()));\r\n  console.log('Exploration complete.');\r\n}","import {get, put, post } from './http.js';\r\nimport { state } from \"./state.js\";\r\n\r\nconst user = (path) => `/users/${state.user.username}/${path}`;\r\nconst game = (path) => `/game/${path}`;\r\n\r\nexport function getStatus() { return get(game('status')); }\r\nexport function createToken(username) { return post(`/users/${username}/token`); }\r\nexport function getUser(username, token) { return get(`/users/${username}`, token); }\r\n\r\nexport function getLoans(token) { return get(game('loans'), token); }\r\nexport function takeLoan(type, token) { return post(user('loans'), { type }, token); }\r\nexport function payLoan(loanId, token) { return put(`${user('loans')}/${loanId}`, {}, token); }\r\n\r\nexport function getShips(token) { return get(game('ships'), token); }\r\nexport function buyShip(location, type, token) { return post(user('ships'), { location, type }, token); }\r\n\r\nexport function getSystems(token) { return get(game('systems'), token); }\r\nexport function getSystem(system, token) { return get(game(`systems/${system}`), token); }\r\nexport function getLocations(system, type, token) { return get(game(`systems/${system}/locations?type=${type}`), token); }\r\nexport function getLocation(location, token) { return get(game(`locations/${location}`), token); }\r\nexport function getMarket(location, token) { return get(game(`locations/${location}/marketplace`), token); }\r\n\r\nexport function createFlightPlan(shipId, destination, token) { return post(user('flight-plans'), { shipId, destination }, token); }\r\nexport function getFlightPlan(flightPlanId, token) { return get(user(`flight-plans/${flightPlanId}`), token); }\r\n\r\nexport function buyGood(shipId, good, quantity, token) { return post(user('purchase-orders'), { shipId, good, quantity: Math.trunc(quantity) }, token); }\r\nexport function sellGood(shipId, good, quantity, token) { return post(user('sell-orders'), { shipId, good, quantity: Math.trunc(quantity) }, token); }","import { upsert } from \"./util.js\";\r\nimport { state, locations, remainingCargo, maxAfford } from './state.js';\r\n\r\nexport const archive = {};\r\nexport function planet(symbol) { return archive.planets.find(x => x.symbol === symbol); }\r\nexport function unexploredLocations() { return locations().filter(location => !planet(location)); }\r\nexport function symbolMatch(existing, incoming) { return existing.symbol === incoming.symbol; }\r\n\r\nexport function fillHold(shipId, good, creditReserve) {\r\n  exports.space = remainingCargo(shipId);\r\n  exports.price = maxAfford(good, creditReserve);\r\n  return Math.min(space, price);\r\n}\r\n\r\nexport function beginTrip() {\r\n  archive.startCredits = state.user.credits;\r\n}\r\n\r\nexport function endTrip() {\r\n  archive.lastProfit = state.user.credits - archive.startCredits;\r\n  archive.trips = (archive.trips || 0) + 1;\r\n  archive.totalProfit = (archive.totalProfit || 0) + archive.lastProfit;\r\n}\r\n\r\nexport function archiveLocations() {\r\n  if (!state.locations) return;\r\n  archive.locations = state.locations.reduce(\r\n    upsert(symbolMatch),\r\n    archive.locations || []\r\n  );\r\n}\r\n\r\nexport function archivePlanet() {\r\n  if (!state.planet) return;\r\n  archive.planets = [state.planet].reduce(\r\n    upsert(symbolMatch),\r\n    archive.planets || []\r\n  );\r\n}\r\n\r\nexport function saveArchive() {\r\n  archiveLocations();\r\n  archivePlanet();\r\n}","import fetch from \"node-fetch\";\r\nimport { root } from './settings.js';\r\nimport { timeout } from \"./util.js\";\r\nimport { saveState } from \"./state.js\";\r\nimport { saveArchive } from \"./archive.js\";\r\n\r\nconst http = async(method, path, fetchBody, token) => {\r\n  const body = fetchBody ? JSON.stringify(fetchBody) : null;\r\n\r\n  const res = await fetch(`${root}${path}`, {\r\n    method,\r\n    body,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n  });\r\n\r\n  const json = await res.json();\r\n\r\n  saveState(json);\r\n  saveArchive();\r\n  await timeout(1);\r\n\r\n  return json;\r\n};\r\n\r\nexport function get(path, token) { return http('GET', path, null, token); }\r\nexport function post(path, body, token) { return http('POST', path, body, token); }\r\nexport function put(path, body, token) { return http('PUT', path, body, token); }","import { state, systemLocation } from \"./state.js\";\r\nimport { archive } from \"./archive.js\";\r\n\r\nconst reportHeader = '/*\\\\';\r\nconst linePrefix = '|*|';\r\nconst reportFooter = '\\\\*/';\r\nconst takeLongest = (p, c) => c.length > p ? c.length : p;\r\nconst longestKey = (array, keyPicker) => array.map(keyPicker).reduce(takeLongest, 0);\r\nconst sortLocations = (a, b) => a.name < b.name ? -1 : 1;\r\nconst sortMarket = (a, b) => a.symbol < b.symbol ? -1 : 1;\r\nconst marketLine = (item) => `${item.symbol}  ${item.pricePerUnit}  ${item.quantityAvailable}`;\r\n\r\nconst marketReport = (marketplace) => {\r\n  const header = {\r\n    symbol: 'name',\r\n    pricePerUnit: 'price',\r\n    quantityAvailable: 'available'\r\n  };\r\n\r\n  const marketplaceWithHeader = [header, ...marketplace];\r\n  const longestSymbol = longestKey(marketplaceWithHeader, x => x.symbol);\r\n  const longestPrice = longestKey(marketplaceWithHeader, x => x.pricePerUnit.toString());\r\n  const longestAvailable = longestKey(marketplaceWithHeader, x => x.quantityAvailable.toString());\r\n\r\n  const lineData = (item) => ({\r\n    symbol: item.symbol.padEnd(longestSymbol, ' '),\r\n    pricePerUnit: item.pricePerUnit.toString().padStart(longestPrice, ' '),\r\n    quantityAvailable: item.quantityAvailable.toString().padStart(longestAvailable, ' ')\r\n  });\r\n\r\n  return [header, ...marketplace.sort(sortMarket)].map(lineData).map(marketLine);\r\n};\r\n\r\nconst prefixLines = (data) => data.map(x => `${linePrefix} ${x}`);\r\n\r\nexport const report = (data) => `${reportHeader}\\n${prefixLines(data).join(`\\n`)}\\n${reportFooter}`;\r\nexport const planetReport = (planet) => [`${planet.name}  ${planet.symbol}`, ...marketReport(planet.marketplace)];\r\nexport function systemReport() { return [].concat(...archive.planets.sort(sortLocations).map(x => [...planetReport(x), ''])); }\r\nexport function buyReport(order) { return `Bought ${order.quantity} ${order.good} for ${order.total} at ${order.pricePerUnit} each.`; }\r\nexport function sellReport(order) { return `Sold ${order.quantity} ${order.good} for ${order.total}.`; }\r\nexport function creditReport() { return `${state.user.credits} credits remaining.`; }\r\nexport function flightReport() { return `Flying to ${systemLocation(state.flightPlan.destination).name}.`; }\r\nexport function tripReport() { return `Completed trip number ${archive.trips}.`; }\r\nexport function profitReport() { return `${archive.lastProfit} profit.`; }\r\nexport function totalProfitReport() { return `${archive.totalProfit} total profit.`; }\r\nexport function availableReport(good) { return `${good} is not available here.`; }\r\nexport function poorReport(good, quantity) { return `Cannot afford to buy ${quantity} of ${good}`; }","import { logIn, startup, trade, explore } from './actions.js';\r\nimport { getMarket } from './api.js';\r\nimport { state, ship } from './state.js';\r\n\r\nexport async function richMan() {\r\n  await logIn({\r\n    token: '212132e0-a388-4d74-a176-ff74c01e6f94',\r\n    username: 'dcabines'\r\n  });\r\n\r\n  const myShip = ship('ckm2vc3vk16160214989jh86ygmm');\r\n\r\n  if (myShip.location) {\r\n    await getMarket(myShip.location, state.token);\r\n  }\r\n\r\n  await trade({\r\n    good: 'METALS',\r\n    source: 'OE-NY',\r\n    destination: 'OE-PM',\r\n    fuel: 30,\r\n    creditReserve: 10000,\r\n    shipId: 'ckm2vc3vk16160214989jh86ygmm'\r\n  });\r\n}\r\n\r\nexport async function richExplorer() {\r\n  await logIn({\r\n    token: '212132e0-a388-4d74-a176-ff74c01e6f94',\r\n    username: 'dcabines'\r\n  });\r\n\r\n  const myShip = ship('ckm2vc3vk16160214989jh86ygmm');\r\n\r\n  if (myShip.location) {\r\n    await getMarket(myShip.location);\r\n  }\r\n\r\n  await explore({\r\n    shipId: myShip.id\r\n  });\r\n}\r\n\r\nexport async function poorMan() {\r\n  await logIn();\r\n  await startup();\r\n\r\n  await trade({\r\n    good: 'METALS',\r\n    source: 'OE-PM',\r\n    destination: 'OE-NY',\r\n    fuel: 30,\r\n    creditReserve: 0,\r\n    shipId: state.user.ships[0].id\r\n  });\r\n\r\n  await poorMan();\r\n}\r\n\r\nexport async function explorer() {\r\n  await logIn();\r\n  await startup();\r\n  await explore({\r\n    shipId: state.user.ships[0].id\r\n  });\r\n}","export const root = 'https://api.spacetraders.io';","export const state = {};\r\nexport function saveState(data) { return Object.assign(state, data); }\r\n\r\nexport function system() { return state.systems[0]; }\r\nexport function locations() { return system().locations; }\r\nexport function systemLocation(symbol) { return locations().find(x => x.symbol === symbol); }\r\nexport function marketItem(symbol) { return state.planet.marketplace.find(x => x.symbol === symbol); }\r\n\r\nexport function ship(shipId) { return state.user.ships.find(x => x.id === shipId); }\r\nexport function cargo(shipId, good) { return ship(shipId).cargo.find(x => x.good === good); }\r\nexport function cargoTotal(shipId) { return ship(shipId).cargo.reduce((p, c) => p + c.quantity, 0); }\r\nexport function remainingCargo(shipId) { return ship(shipId).maxCargo - cargoTotal(shipId); }\r\nexport function goodQuantity(shipId, good) { return cargo(shipId, good).quantity; }\r\n\r\nexport function maxAfford(good, creditReserve) {\r\n  exports.credits = state.user.credits - creditReserve;\r\n  exports.price = marketItem(good).pricePerUnit;\r\n  return credits / price;\r\n}","export function timeout(seconds) { return new Promise(resolve => setTimeout(resolve, seconds * 1000)); }\r\nexport function userName() { return `user-${new Date().getTime()}-${Math.random()}`; }\r\n\r\nexport function upsert(findKey) {\r\n  return (destination, incoming) => {\r\n    const existing = destination.find(x => findKey(x, incoming));\r\n    const others = destination.filter(x => x !== existing);\r\n    const updated = {...existing, ...incoming };\r\n    return [...others, updated];\r\n  };\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as actions from './actions.js';\r\nimport { richMan } from './roles.js';\r\n\r\nactions.logIn();\r\nactions.refuel('ckm2vc3vk16160214989jh86ygmm', 30);\r\n//richMan();"],"sourceRoot":""}